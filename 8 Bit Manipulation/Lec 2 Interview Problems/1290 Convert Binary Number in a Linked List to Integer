#include <bits/stdc++.h>
using namespace std;
struct ListNode
{
    int val;
    ListNode *next;
    ListNode() : val(0), next(nullptr) {}
    ListNode(int x) : val(x), next(nullptr) {}
    ListNode(int x, ListNode *next) : val(x), next(next) {}
};

class Solution
{
public:
    int getDecimalValue(ListNode *head)
    {
        ListNode *dummy = head;
        int value = 0;
        while (dummy != nullptr)
        {
            value = (value << 1) | dummy->val;
            dummy = dummy->next;
        }
        return value;
    }
};

int main()
{
    // Example usage:
    // Create a linked list: 1 -> 0 -> 1
    ListNode *head = new ListNode(1);
    head->next = new ListNode(0);
    head->next->next = new ListNode(1);

    Solution solution;
    int decimalValue = solution.getDecimalValue(head);

    // Output the result
    std::cout << "Decimal value: " << decimalValue << std::endl;

    // Clean up memory
    while (head != nullptr)
    {
        ListNode *temp = head;
        head = head->next;
        delete temp;
    }

    return 0;
}